// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MapTrie.proto

package top.chitucao.summerframework.trie.codec;

public final class MapTrieProtoBuf {
  private MapTrieProtoBuf() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TrieOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Trie)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.Node root = 1;</code>
     */
    boolean hasRoot();
    /**
     * <code>.Node root = 1;</code>
     */
    Node getRoot();
    /**
     * <code>.Node root = 1;</code>
     */
    NodeOrBuilder getRootOrBuilder();

    /**
     * <code>int64 size = 2;</code>
     */
    long getSize();

    /**
     * <code>repeated .Dict dict = 3;</code>
     */
    java.util.List<Dict>
        getDictList();
    /**
     * <code>repeated .Dict dict = 3;</code>
     */
    Dict getDict(int index);
    /**
     * <code>repeated .Dict dict = 3;</code>
     */
    int getDictCount();
    /**
     * <code>repeated .Dict dict = 3;</code>
     */
    java.util.List<? extends DictOrBuilder>
        getDictOrBuilderList();
    /**
     * <code>repeated .Dict dict = 3;</code>
     */
    DictOrBuilder getDictOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code Trie}
   */
  public  static final class Trie extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Trie)
      TrieOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Trie.newBuilder() to construct.
    private Trie(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Trie() {
      dict_ = java.util.Collections.emptyList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Trie(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              Node.Builder subBuilder = null;
              if (root_ != null) {
                subBuilder = root_.toBuilder();
              }
              root_ = input.readMessage(Node.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(root_);
                root_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {

              size_ = input.readInt64();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                dict_ = new java.util.ArrayList<Dict>();
                mutable_bitField0_ |= 0x00000004;
              }
              dict_.add(
                  input.readMessage(Dict.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          dict_ = java.util.Collections.unmodifiableList(dict_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MapTrieProtoBuf.internal_static_Trie_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MapTrieProtoBuf.internal_static_Trie_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Trie.class, Builder.class);
    }

    private int bitField0_;
    public static final int ROOT_FIELD_NUMBER = 1;
    private Node root_;
    /**
     * <code>.Node root = 1;</code>
     */
    public boolean hasRoot() {
      return root_ != null;
    }
    /**
     * <code>.Node root = 1;</code>
     */
    public Node getRoot() {
      return root_ == null ? Node.getDefaultInstance() : root_;
    }
    /**
     * <code>.Node root = 1;</code>
     */
    public NodeOrBuilder getRootOrBuilder() {
      return getRoot();
    }

    public static final int SIZE_FIELD_NUMBER = 2;
    private long size_;
    /**
     * <code>int64 size = 2;</code>
     */
    public long getSize() {
      return size_;
    }

    public static final int DICT_FIELD_NUMBER = 3;
    private java.util.List<Dict> dict_;
    /**
     * <code>repeated .Dict dict = 3;</code>
     */
    public java.util.List<Dict> getDictList() {
      return dict_;
    }
    /**
     * <code>repeated .Dict dict = 3;</code>
     */
    public java.util.List<? extends DictOrBuilder>
        getDictOrBuilderList() {
      return dict_;
    }
    /**
     * <code>repeated .Dict dict = 3;</code>
     */
    public int getDictCount() {
      return dict_.size();
    }
    /**
     * <code>repeated .Dict dict = 3;</code>
     */
    public Dict getDict(int index) {
      return dict_.get(index);
    }
    /**
     * <code>repeated .Dict dict = 3;</code>
     */
    public DictOrBuilder getDictOrBuilder(
        int index) {
      return dict_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (root_ != null) {
        output.writeMessage(1, getRoot());
      }
      if (size_ != 0L) {
        output.writeInt64(2, size_);
      }
      for (int i = 0; i < dict_.size(); i++) {
        output.writeMessage(3, dict_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (root_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getRoot());
      }
      if (size_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, size_);
      }
      for (int i = 0; i < dict_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, dict_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Trie)) {
        return super.equals(obj);
      }
      Trie other = (Trie) obj;

      if (hasRoot() != other.hasRoot()) return false;
      if (hasRoot()) {
        if (!getRoot()
            .equals(other.getRoot())) return false;
      }
      if (getSize()
          != other.getSize()) return false;
      if (!getDictList()
          .equals(other.getDictList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRoot()) {
        hash = (37 * hash) + ROOT_FIELD_NUMBER;
        hash = (53 * hash) + getRoot().hashCode();
      }
      hash = (37 * hash) + SIZE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSize());
      if (getDictCount() > 0) {
        hash = (37 * hash) + DICT_FIELD_NUMBER;
        hash = (53 * hash) + getDictList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Trie parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Trie parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Trie parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Trie parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Trie parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Trie parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Trie parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Trie parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Trie parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Trie parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Trie parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Trie parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Trie prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Trie}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Trie)
        TrieOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MapTrieProtoBuf.internal_static_Trie_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MapTrieProtoBuf.internal_static_Trie_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Trie.class, Builder.class);
      }

      // Construct using top.chitucao.summerframework.trie.codec.MapTrieProtoBuf.Trie.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDictFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (rootBuilder_ == null) {
          root_ = null;
        } else {
          root_ = null;
          rootBuilder_ = null;
        }
        size_ = 0L;

        if (dictBuilder_ == null) {
          dict_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          dictBuilder_.clear();
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MapTrieProtoBuf.internal_static_Trie_descriptor;
      }

      @Override
      public Trie getDefaultInstanceForType() {
        return Trie.getDefaultInstance();
      }

      @Override
      public Trie build() {
        Trie result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public Trie buildPartial() {
        Trie result = new Trie(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (rootBuilder_ == null) {
          result.root_ = root_;
        } else {
          result.root_ = rootBuilder_.build();
        }
        result.size_ = size_;
        if (dictBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            dict_ = java.util.Collections.unmodifiableList(dict_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.dict_ = dict_;
        } else {
          result.dict_ = dictBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Trie) {
          return mergeFrom((Trie)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Trie other) {
        if (other == Trie.getDefaultInstance()) return this;
        if (other.hasRoot()) {
          mergeRoot(other.getRoot());
        }
        if (other.getSize() != 0L) {
          setSize(other.getSize());
        }
        if (dictBuilder_ == null) {
          if (!other.dict_.isEmpty()) {
            if (dict_.isEmpty()) {
              dict_ = other.dict_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureDictIsMutable();
              dict_.addAll(other.dict_);
            }
            onChanged();
          }
        } else {
          if (!other.dict_.isEmpty()) {
            if (dictBuilder_.isEmpty()) {
              dictBuilder_.dispose();
              dictBuilder_ = null;
              dict_ = other.dict_;
              bitField0_ = (bitField0_ & ~0x00000004);
              dictBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDictFieldBuilder() : null;
            } else {
              dictBuilder_.addAllMessages(other.dict_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Trie parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Trie) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Node root_;
      private com.google.protobuf.SingleFieldBuilderV3<
          Node, Node.Builder, NodeOrBuilder> rootBuilder_;
      /**
       * <code>.Node root = 1;</code>
       */
      public boolean hasRoot() {
        return rootBuilder_ != null || root_ != null;
      }
      /**
       * <code>.Node root = 1;</code>
       */
      public Node getRoot() {
        if (rootBuilder_ == null) {
          return root_ == null ? Node.getDefaultInstance() : root_;
        } else {
          return rootBuilder_.getMessage();
        }
      }
      /**
       * <code>.Node root = 1;</code>
       */
      public Builder setRoot(Node value) {
        if (rootBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          root_ = value;
          onChanged();
        } else {
          rootBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.Node root = 1;</code>
       */
      public Builder setRoot(
          Node.Builder builderForValue) {
        if (rootBuilder_ == null) {
          root_ = builderForValue.build();
          onChanged();
        } else {
          rootBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.Node root = 1;</code>
       */
      public Builder mergeRoot(Node value) {
        if (rootBuilder_ == null) {
          if (root_ != null) {
            root_ =
              Node.newBuilder(root_).mergeFrom(value).buildPartial();
          } else {
            root_ = value;
          }
          onChanged();
        } else {
          rootBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.Node root = 1;</code>
       */
      public Builder clearRoot() {
        if (rootBuilder_ == null) {
          root_ = null;
          onChanged();
        } else {
          root_ = null;
          rootBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.Node root = 1;</code>
       */
      public Node.Builder getRootBuilder() {
        
        onChanged();
        return getRootFieldBuilder().getBuilder();
      }
      /**
       * <code>.Node root = 1;</code>
       */
      public NodeOrBuilder getRootOrBuilder() {
        if (rootBuilder_ != null) {
          return rootBuilder_.getMessageOrBuilder();
        } else {
          return root_ == null ?
              Node.getDefaultInstance() : root_;
        }
      }
      /**
       * <code>.Node root = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Node, Node.Builder, NodeOrBuilder>
          getRootFieldBuilder() {
        if (rootBuilder_ == null) {
          rootBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Node, Node.Builder, NodeOrBuilder>(
                  getRoot(),
                  getParentForChildren(),
                  isClean());
          root_ = null;
        }
        return rootBuilder_;
      }

      private long size_ ;
      /**
       * <code>int64 size = 2;</code>
       */
      public long getSize() {
        return size_;
      }
      /**
       * <code>int64 size = 2;</code>
       */
      public Builder setSize(long value) {
        
        size_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 size = 2;</code>
       */
      public Builder clearSize() {
        
        size_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<Dict> dict_ =
        java.util.Collections.emptyList();
      private void ensureDictIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          dict_ = new java.util.ArrayList<Dict>(dict_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          Dict, Dict.Builder, DictOrBuilder> dictBuilder_;

      /**
       * <code>repeated .Dict dict = 3;</code>
       */
      public java.util.List<Dict> getDictList() {
        if (dictBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dict_);
        } else {
          return dictBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Dict dict = 3;</code>
       */
      public int getDictCount() {
        if (dictBuilder_ == null) {
          return dict_.size();
        } else {
          return dictBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Dict dict = 3;</code>
       */
      public Dict getDict(int index) {
        if (dictBuilder_ == null) {
          return dict_.get(index);
        } else {
          return dictBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Dict dict = 3;</code>
       */
      public Builder setDict(
          int index, Dict value) {
        if (dictBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDictIsMutable();
          dict_.set(index, value);
          onChanged();
        } else {
          dictBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Dict dict = 3;</code>
       */
      public Builder setDict(
          int index, Dict.Builder builderForValue) {
        if (dictBuilder_ == null) {
          ensureDictIsMutable();
          dict_.set(index, builderForValue.build());
          onChanged();
        } else {
          dictBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Dict dict = 3;</code>
       */
      public Builder addDict(Dict value) {
        if (dictBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDictIsMutable();
          dict_.add(value);
          onChanged();
        } else {
          dictBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Dict dict = 3;</code>
       */
      public Builder addDict(
          int index, Dict value) {
        if (dictBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDictIsMutable();
          dict_.add(index, value);
          onChanged();
        } else {
          dictBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Dict dict = 3;</code>
       */
      public Builder addDict(
          Dict.Builder builderForValue) {
        if (dictBuilder_ == null) {
          ensureDictIsMutable();
          dict_.add(builderForValue.build());
          onChanged();
        } else {
          dictBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Dict dict = 3;</code>
       */
      public Builder addDict(
          int index, Dict.Builder builderForValue) {
        if (dictBuilder_ == null) {
          ensureDictIsMutable();
          dict_.add(index, builderForValue.build());
          onChanged();
        } else {
          dictBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Dict dict = 3;</code>
       */
      public Builder addAllDict(
          Iterable<? extends Dict> values) {
        if (dictBuilder_ == null) {
          ensureDictIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, dict_);
          onChanged();
        } else {
          dictBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Dict dict = 3;</code>
       */
      public Builder clearDict() {
        if (dictBuilder_ == null) {
          dict_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          dictBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Dict dict = 3;</code>
       */
      public Builder removeDict(int index) {
        if (dictBuilder_ == null) {
          ensureDictIsMutable();
          dict_.remove(index);
          onChanged();
        } else {
          dictBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Dict dict = 3;</code>
       */
      public Dict.Builder getDictBuilder(
          int index) {
        return getDictFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Dict dict = 3;</code>
       */
      public DictOrBuilder getDictOrBuilder(
          int index) {
        if (dictBuilder_ == null) {
          return dict_.get(index);  } else {
          return dictBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Dict dict = 3;</code>
       */
      public java.util.List<? extends DictOrBuilder>
           getDictOrBuilderList() {
        if (dictBuilder_ != null) {
          return dictBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dict_);
        }
      }
      /**
       * <code>repeated .Dict dict = 3;</code>
       */
      public Dict.Builder addDictBuilder() {
        return getDictFieldBuilder().addBuilder(
            Dict.getDefaultInstance());
      }
      /**
       * <code>repeated .Dict dict = 3;</code>
       */
      public Dict.Builder addDictBuilder(
          int index) {
        return getDictFieldBuilder().addBuilder(
            index, Dict.getDefaultInstance());
      }
      /**
       * <code>repeated .Dict dict = 3;</code>
       */
      public java.util.List<Dict.Builder>
           getDictBuilderList() {
        return getDictFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          Dict, Dict.Builder, DictOrBuilder>
          getDictFieldBuilder() {
        if (dictBuilder_ == null) {
          dictBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              Dict, Dict.Builder, DictOrBuilder>(
                  dict_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          dict_ = null;
        }
        return dictBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Trie)
    }

    // @@protoc_insertion_point(class_scope:Trie)
    private static final Trie DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Trie();
    }

    public static Trie getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Trie>
        PARSER = new com.google.protobuf.AbstractParser<Trie>() {
      @Override
      public Trie parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Trie(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Trie> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Trie> getParserForType() {
      return PARSER;
    }

    @Override
    public Trie getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Node)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;int64, .Node&gt; child = 1;</code>
     */
    int getChildCount();
    /**
     * <code>map&lt;int64, .Node&gt; child = 1;</code>
     */
    boolean containsChild(
        long key);
    /**
     * Use {@link #getChildMap()} instead.
     */
    @Deprecated
    java.util.Map<Long, Node>
    getChild();
    /**
     * <code>map&lt;int64, .Node&gt; child = 1;</code>
     */
    java.util.Map<Long, Node>
    getChildMap();
    /**
     * <code>map&lt;int64, .Node&gt; child = 1;</code>
     */

    Node getChildOrDefault(
        long key,
        Node defaultValue);
    /**
     * <code>map&lt;int64, .Node&gt; child = 1;</code>
     */

    Node getChildOrThrow(
        long key);
  }
  /**
   * Protobuf type {@code Node}
   */
  public  static final class Node extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Node)
      NodeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Node.newBuilder() to construct.
    private Node(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Node() {
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Node(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                child_ = com.google.protobuf.MapField.newMapField(
                    ChildDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<Long, Node>
              child__ = input.readMessage(
                  ChildDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              child_.getMutableMap().put(
                  child__.getKey(), child__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MapTrieProtoBuf.internal_static_Node_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetChild();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MapTrieProtoBuf.internal_static_Node_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Node.class, Builder.class);
    }

    public static final int CHILD_FIELD_NUMBER = 1;
    private static final class ChildDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          Long, Node> defaultEntry =
              com.google.protobuf.MapEntry
              .<Long, Node>newDefaultInstance(
                  MapTrieProtoBuf.internal_static_Node_ChildEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.INT64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  Node.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        Long, Node> child_;
    private com.google.protobuf.MapField<Long, Node>
    internalGetChild() {
      if (child_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ChildDefaultEntryHolder.defaultEntry);
      }
      return child_;
    }

    public int getChildCount() {
      return internalGetChild().getMap().size();
    }
    /**
     * <code>map&lt;int64, .Node&gt; child = 1;</code>
     */

    public boolean containsChild(
        long key) {
      
      return internalGetChild().getMap().containsKey(key);
    }
    /**
     * Use {@link #getChildMap()} instead.
     */
    @Deprecated
    public java.util.Map<Long, Node> getChild() {
      return getChildMap();
    }
    /**
     * <code>map&lt;int64, .Node&gt; child = 1;</code>
     */

    public java.util.Map<Long, Node> getChildMap() {
      return internalGetChild().getMap();
    }
    /**
     * <code>map&lt;int64, .Node&gt; child = 1;</code>
     */

    public Node getChildOrDefault(
        long key,
        Node defaultValue) {
      
      java.util.Map<Long, Node> map =
          internalGetChild().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int64, .Node&gt; child = 1;</code>
     */

    public Node getChildOrThrow(
        long key) {
      
      java.util.Map<Long, Node> map =
          internalGetChild().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetChild(),
          ChildDefaultEntryHolder.defaultEntry,
          1);
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<Long, Node> entry
           : internalGetChild().getMap().entrySet()) {
        com.google.protobuf.MapEntry<Long, Node>
        child__ = ChildDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, child__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Node)) {
        return super.equals(obj);
      }
      Node other = (Node) obj;

      if (!internalGetChild().equals(
          other.internalGetChild())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetChild().getMap().isEmpty()) {
        hash = (37 * hash) + CHILD_FIELD_NUMBER;
        hash = (53 * hash) + internalGetChild().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Node parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Node parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Node parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Node parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Node parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Node parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Node parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Node parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Node parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Node parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Node parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Node parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Node prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Node}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Node)
        NodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MapTrieProtoBuf.internal_static_Node_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetChild();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableChild();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MapTrieProtoBuf.internal_static_Node_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Node.class, Builder.class);
      }

      // Construct using top.chitucao.summerframework.trie.codec.MapTrieProtoBuf.Node.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        internalGetMutableChild().clear();
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MapTrieProtoBuf.internal_static_Node_descriptor;
      }

      @Override
      public Node getDefaultInstanceForType() {
        return Node.getDefaultInstance();
      }

      @Override
      public Node build() {
        Node result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public Node buildPartial() {
        Node result = new Node(this);
        int from_bitField0_ = bitField0_;
        result.child_ = internalGetChild();
        result.child_.makeImmutable();
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Node) {
          return mergeFrom((Node)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Node other) {
        if (other == Node.getDefaultInstance()) return this;
        internalGetMutableChild().mergeFrom(
            other.internalGetChild());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Node parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Node) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          Long, Node> child_;
      private com.google.protobuf.MapField<Long, Node>
      internalGetChild() {
        if (child_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ChildDefaultEntryHolder.defaultEntry);
        }
        return child_;
      }
      private com.google.protobuf.MapField<Long, Node>
      internalGetMutableChild() {
        onChanged();;
        if (child_ == null) {
          child_ = com.google.protobuf.MapField.newMapField(
              ChildDefaultEntryHolder.defaultEntry);
        }
        if (!child_.isMutable()) {
          child_ = child_.copy();
        }
        return child_;
      }

      public int getChildCount() {
        return internalGetChild().getMap().size();
      }
      /**
       * <code>map&lt;int64, .Node&gt; child = 1;</code>
       */

      public boolean containsChild(
          long key) {
        
        return internalGetChild().getMap().containsKey(key);
      }
      /**
       * Use {@link #getChildMap()} instead.
       */
      @Deprecated
      public java.util.Map<Long, Node> getChild() {
        return getChildMap();
      }
      /**
       * <code>map&lt;int64, .Node&gt; child = 1;</code>
       */

      public java.util.Map<Long, Node> getChildMap() {
        return internalGetChild().getMap();
      }
      /**
       * <code>map&lt;int64, .Node&gt; child = 1;</code>
       */

      public Node getChildOrDefault(
          long key,
          Node defaultValue) {
        
        java.util.Map<Long, Node> map =
            internalGetChild().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int64, .Node&gt; child = 1;</code>
       */

      public Node getChildOrThrow(
          long key) {
        
        java.util.Map<Long, Node> map =
            internalGetChild().getMap();
        if (!map.containsKey(key)) {
          throw new IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearChild() {
        internalGetMutableChild().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int64, .Node&gt; child = 1;</code>
       */

      public Builder removeChild(
          long key) {
        
        internalGetMutableChild().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @Deprecated
      public java.util.Map<Long, Node>
      getMutableChild() {
        return internalGetMutableChild().getMutableMap();
      }
      /**
       * <code>map&lt;int64, .Node&gt; child = 1;</code>
       */
      public Builder putChild(
          long key,
          Node value) {
        
        if (value == null) { throw new NullPointerException(); }
        internalGetMutableChild().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int64, .Node&gt; child = 1;</code>
       */

      public Builder putAllChild(
          java.util.Map<Long, Node> values) {
        internalGetMutableChild().getMutableMap()
            .putAll(values);
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Node)
    }

    // @@protoc_insertion_point(class_scope:Node)
    private static final Node DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Node();
    }

    public static Node getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Node>
        PARSER = new com.google.protobuf.AbstractParser<Node>() {
      @Override
      public Node parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Node(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Node> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Node> getParserForType() {
      return PARSER;
    }

    @Override
    public Node getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DictOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Dict)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string keyClazz = 1;</code>
     */
    String getKeyClazz();
    /**
     * <code>string keyClazz = 1;</code>
     */
    com.google.protobuf.ByteString
        getKeyClazzBytes();

    /**
     * <code>string valClazz = 2;</code>
     */
    String getValClazz();
    /**
     * <code>string valClazz = 2;</code>
     */
    com.google.protobuf.ByteString
        getValClazzBytes();

    /**
     * <code>bytes kv = 3;</code>
     */
    com.google.protobuf.ByteString getKv();
  }
  /**
   * Protobuf type {@code Dict}
   */
  public  static final class Dict extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Dict)
      DictOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Dict.newBuilder() to construct.
    private Dict(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Dict() {
      keyClazz_ = "";
      valClazz_ = "";
      kv_ = com.google.protobuf.ByteString.EMPTY;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Dict(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              String s = input.readStringRequireUtf8();

              keyClazz_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              valClazz_ = s;
              break;
            }
            case 26: {

              kv_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MapTrieProtoBuf.internal_static_Dict_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MapTrieProtoBuf.internal_static_Dict_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Dict.class, Builder.class);
    }

    public static final int KEYCLAZZ_FIELD_NUMBER = 1;
    private volatile Object keyClazz_;
    /**
     * <code>string keyClazz = 1;</code>
     */
    public String getKeyClazz() {
      Object ref = keyClazz_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        keyClazz_ = s;
        return s;
      }
    }
    /**
     * <code>string keyClazz = 1;</code>
     */
    public com.google.protobuf.ByteString
        getKeyClazzBytes() {
      Object ref = keyClazz_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        keyClazz_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALCLAZZ_FIELD_NUMBER = 2;
    private volatile Object valClazz_;
    /**
     * <code>string valClazz = 2;</code>
     */
    public String getValClazz() {
      Object ref = valClazz_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        valClazz_ = s;
        return s;
      }
    }
    /**
     * <code>string valClazz = 2;</code>
     */
    public com.google.protobuf.ByteString
        getValClazzBytes() {
      Object ref = valClazz_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        valClazz_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int KV_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString kv_;
    /**
     * <code>bytes kv = 3;</code>
     */
    public com.google.protobuf.ByteString getKv() {
      return kv_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getKeyClazzBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, keyClazz_);
      }
      if (!getValClazzBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, valClazz_);
      }
      if (!kv_.isEmpty()) {
        output.writeBytes(3, kv_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getKeyClazzBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, keyClazz_);
      }
      if (!getValClazzBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, valClazz_);
      }
      if (!kv_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, kv_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Dict)) {
        return super.equals(obj);
      }
      Dict other = (Dict) obj;

      if (!getKeyClazz()
          .equals(other.getKeyClazz())) return false;
      if (!getValClazz()
          .equals(other.getValClazz())) return false;
      if (!getKv()
          .equals(other.getKv())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEYCLAZZ_FIELD_NUMBER;
      hash = (53 * hash) + getKeyClazz().hashCode();
      hash = (37 * hash) + VALCLAZZ_FIELD_NUMBER;
      hash = (53 * hash) + getValClazz().hashCode();
      hash = (37 * hash) + KV_FIELD_NUMBER;
      hash = (53 * hash) + getKv().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Dict parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Dict parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Dict parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Dict parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Dict parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Dict parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Dict parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Dict parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Dict parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Dict parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Dict parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Dict parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Dict prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Dict}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Dict)
        DictOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MapTrieProtoBuf.internal_static_Dict_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MapTrieProtoBuf.internal_static_Dict_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Dict.class, Builder.class);
      }

      // Construct using top.chitucao.summerframework.trie.codec.MapTrieProtoBuf.Dict.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        keyClazz_ = "";

        valClazz_ = "";

        kv_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MapTrieProtoBuf.internal_static_Dict_descriptor;
      }

      @Override
      public Dict getDefaultInstanceForType() {
        return Dict.getDefaultInstance();
      }

      @Override
      public Dict build() {
        Dict result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public Dict buildPartial() {
        Dict result = new Dict(this);
        result.keyClazz_ = keyClazz_;
        result.valClazz_ = valClazz_;
        result.kv_ = kv_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Dict) {
          return mergeFrom((Dict)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Dict other) {
        if (other == Dict.getDefaultInstance()) return this;
        if (!other.getKeyClazz().isEmpty()) {
          keyClazz_ = other.keyClazz_;
          onChanged();
        }
        if (!other.getValClazz().isEmpty()) {
          valClazz_ = other.valClazz_;
          onChanged();
        }
        if (other.getKv() != com.google.protobuf.ByteString.EMPTY) {
          setKv(other.getKv());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Dict parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Dict) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object keyClazz_ = "";
      /**
       * <code>string keyClazz = 1;</code>
       */
      public String getKeyClazz() {
        Object ref = keyClazz_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          keyClazz_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string keyClazz = 1;</code>
       */
      public com.google.protobuf.ByteString
          getKeyClazzBytes() {
        Object ref = keyClazz_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          keyClazz_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string keyClazz = 1;</code>
       */
      public Builder setKeyClazz(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        keyClazz_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string keyClazz = 1;</code>
       */
      public Builder clearKeyClazz() {
        
        keyClazz_ = getDefaultInstance().getKeyClazz();
        onChanged();
        return this;
      }
      /**
       * <code>string keyClazz = 1;</code>
       */
      public Builder setKeyClazzBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        keyClazz_ = value;
        onChanged();
        return this;
      }

      private Object valClazz_ = "";
      /**
       * <code>string valClazz = 2;</code>
       */
      public String getValClazz() {
        Object ref = valClazz_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          valClazz_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string valClazz = 2;</code>
       */
      public com.google.protobuf.ByteString
          getValClazzBytes() {
        Object ref = valClazz_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          valClazz_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string valClazz = 2;</code>
       */
      public Builder setValClazz(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        valClazz_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string valClazz = 2;</code>
       */
      public Builder clearValClazz() {
        
        valClazz_ = getDefaultInstance().getValClazz();
        onChanged();
        return this;
      }
      /**
       * <code>string valClazz = 2;</code>
       */
      public Builder setValClazzBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        valClazz_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString kv_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes kv = 3;</code>
       */
      public com.google.protobuf.ByteString getKv() {
        return kv_;
      }
      /**
       * <code>bytes kv = 3;</code>
       */
      public Builder setKv(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        kv_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes kv = 3;</code>
       */
      public Builder clearKv() {
        
        kv_ = getDefaultInstance().getKv();
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Dict)
    }

    // @@protoc_insertion_point(class_scope:Dict)
    private static final Dict DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Dict();
    }

    public static Dict getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Dict>
        PARSER = new com.google.protobuf.AbstractParser<Dict>() {
      @Override
      public Dict parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Dict(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Dict> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Dict> getParserForType() {
      return PARSER;
    }

    @Override
    public Dict getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Trie_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Trie_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Node_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Node_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Node_ChildEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Node_ChildEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Dict_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Dict_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\rMapTrie.proto\">\n\004Trie\022\023\n\004root\030\001 \001(\0132\005." +
      "Node\022\014\n\004size\030\002 \001(\003\022\023\n\004dict\030\003 \003(\0132\005.Dict\"" +
      "\\\n\004Node\022\037\n\005child\030\001 \003(\0132\020.Node.ChildEntry" +
      "\0323\n\nChildEntry\022\013\n\003key\030\001 \001(\003\022\024\n\005value\030\002 \001" +
      "(\0132\005.Node:\0028\001\"6\n\004Dict\022\020\n\010keyClazz\030\001 \001(\t\022" +
      "\020\n\010valClazz\030\002 \001(\t\022\n\n\002kv\030\003 \001(\014B:\n\'top.chi" +
      "tucao.summerframework.trie.codecB\017MapTri" +
      "eProtoBufb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_Trie_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Trie_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Trie_descriptor,
        new String[] { "Root", "Size", "Dict", });
    internal_static_Node_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Node_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Node_descriptor,
        new String[] { "Child", });
    internal_static_Node_ChildEntry_descriptor =
      internal_static_Node_descriptor.getNestedTypes().get(0);
    internal_static_Node_ChildEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Node_ChildEntry_descriptor,
        new String[] { "Key", "Value", });
    internal_static_Dict_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_Dict_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Dict_descriptor,
        new String[] { "KeyClazz", "ValClazz", "Kv", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
